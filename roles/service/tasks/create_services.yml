---

- name: Check if remote repo exists
  command: 'gh repo view auto-processor/{{ item.name }}'
  changed_when: false
  ignore_errors: true
  register: result

- name: "Act on {{ item.name }} lambda role"
  community.aws.iam_role:
    name: "{{ item.name }}-lambda-role"
    purge_policies: false
    assume_role_policy_document: "{{ lookup('template','lambda_role.json.j2') }}"
    description: "This is the {{ item.name }} role"
  register: lambda_role

- name: 'Act on {{ item.name }} lambda policy'
  community.aws.iam_policy:
    iam_type: role
    iam_name: '{{ lambda_role.role_name }}'
    policy_name: '{{ item.name }}-lambda-policy'
    state: present
    policy_json: "{{ lookup( 'template', 'lambda_policy.json.j2') }}"

- name: Setup AWS API Gateway on AWS
  amazon.aws.cloudformation:
    stack_name: "{{ item.name }}-api-gateway"
    state: present
    region: "{{ item.region }}"
    disable_rollback: true
    template_body: "{{ lookup('template', 'cloudformation.json.j2') }}"
    tags:
      Stack: "{{ item.name }}-api-gateway-stack"

- name: Create GitHub repo and start workflow if it does not exist
  include_tasks: deploy_first_time.yml
  when: result is failed
