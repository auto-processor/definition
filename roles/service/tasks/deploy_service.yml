---
- name: "Get {{ service.name }} lambda role info"
  community.aws.iam_role_info:
    name: "{{ service.name }}-lambda-role"
  register: lambda_role

- name: Create repo from template
  command: >
    aws resourcegroupstaggingapi get-resources
    --tag-filters Key=Name,Values={{ service.name }}-api-gateway
  changed_when: false
  register: api_gateway

- name: "Act on {{ service.name }} lambda"
  community.aws.lambda:
    name: '{{ service.name }}'
    state: present
    s3_bucket: lambdas-auto-processor
    s3_key: "{{ service.name }}/{{ service.name }}-{{
             chosen_build_number if
             chosen_build_number is defined
             else lookup('env', 'GITHUB_RUN_NUMBER') }}.zip"
    memory_size: "{{ service.memory }}"
    runtime: "provided.al2"
    role: "{{ (lambda_role.iam_roles | first).arn }}"
    handler: "{{ service.name }}.lambda.HttpAPIProxyGateway"
    tags:
      Name: '{{ service.name }}'

- name: Act on lambda API Gateway event permission
  community.aws.lambda_policy:
    state: present
    function_name: '{{ service.name }}'
    version: 1
    statement_id: "lambda-api-gateway-{{ service.name }}"
    action: lambda:InvokeFunction
    principal: apigateway.amazonaws.com
    source_arn: "{{ ((api_gateway.stdout | from_json).ResourceTagMappingList | first).ResourceARN }}/*/*/*"
    source_account: "{{ caller_info.account }}"
