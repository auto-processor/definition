---
image_ids: { "ap-northeast-1": "ami-ccaa32aa",
             "ap-northeast-2": "ami-579b3b39",
             "ca-central-1": "ami-2b9a1f4f",
             "us-east-2": "ami-2b98b34e",
             "eu-west-2": "ami-1e5d467a",
             "us-west-1": "ami-e64e4d86",
             "ap-southeast-1": "ami-fe92e182",
             "us-west-2": "ami-cca215b4",
             "eu-central-1": "ami-5b158734",
             "us-east-1": "ami-87d58dfd",
             "eu-west-1": "ami-4c2dbe35",
             "eu-west-3": "ami-8c0bbcf1",
             "ap-southeast-2": "ami-c739c4a5",
             "ap-south-1": "ami-e532658a",
             "sa-east-1": "ami-2361234f" }
deploy_bucket: 'deploy-a0dbc565-faf2-4760-9b7e-29a8e45f428e'
xmx: '700m'
user_data: |
  exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
  export XMX={{ xmx }}
  export JAVA_OPTS=
  export DATOMIC_DEPLOY_BUCKET={{ deploy_bucket }}
  export DATOMIC_VERSION={{ version }}
  cd /datomic
  cat <<EOF >aws.properties
  host=`curl http://169.254.169.254/latest/meta-data/local-ipv4`
  alt-host=`curl http://169.254.169.254/latest/meta-data/public-ipv4`
  aws-dynamodb-region={{ aws_region }}
  aws-transactor-role={{ transactor_role.role_name }}
  aws-peer-role={{ peer_role.role_name }}
  protocol=ddb
  memory-index-max=256m
  port={{ port }}
  memory-index-threshold=32m
  object-cache-max=128m
  license-key={{ license_key }}
  aws-dynamodb-table={{ table_name }}
  EOF
  chmod 744 aws.properties
  AWS_ACCESS_KEY_ID="${DATOMIC_READ_DEPLOY_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${DATOMIC_READ_DEPLOY_AWS_SECRET_KEY}" aws s3 cp "s3://${DATOMIC_DEPLOY_BUCKET}/${DATOMIC_VERSION}/startup.sh" startup.sh
  chmod 500 startup.sh
  ./startup.sh
sg_name: 'datomic'
vpc_id: 'vpc-0cdfca9e65ed879c8'
port: '4334'